#!/bin/bash
set -e
export PATH="$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/lib/x86_64-linux-gnu:$SNAP/usr/lib/x86_64-linux-gnu"
export LD_LIBRARY_PATH=$SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH


#TODO(kjackal): Make sure this works on every distro
# Until we get a way to properly patch the docker-default profile
# https://github.com/moby/moby/issues/33060
if [ -d "/etc/apparmor.d" ]; then
  # we have AppArmor
  if [ -f /etc/apparmor.d/docker ]; then
    # docker default profile exists
    if ! $(grep -qE "snap.microk8s.daemon-kubelet" /etc/apparmor.d/docker); then
      "$SNAP/bin/sed" 's/^}$/\ \ signal\ (receive)\ peer=snap.microk8s.daemon-kubelet,\n}/' -i /etc/apparmor.d/docker
    fi
    if ! $(grep -qE "snap.microk8s.daemon-docker" /etc/apparmor.d/docker); then
      "$SNAP/bin/sed" 's/^}$/\ \ signal\ (receive)\ peer=snap.microk8s.daemon-docker,\n}/' -i /etc/apparmor.d/docker
    fi
    if ! $(grep -qE "snap.microk8s.daemon-containerd" /etc/apparmor.d/docker); then
      "$SNAP/bin/sed" 's/^}$/\ \ signal\ (receive)\ peer=snap.microk8s.daemon-containerd,\n}/' -i /etc/apparmor.d/docker
    fi
  else
    echo "Using a docker-default template"
    cp ${SNAP}/docker-profile /etc/apparmor.d/docker
  fi
  echo "Reloading AppArmor profiles"
  if ! service apparmor reload
  then
    echo "AppArmor profiles loading failed. AppArmor may be unavailable on this host."
  fi
fi

app=dockerd

# This is really the only way I could find to get the args passed in correctly. WTF
declare -a args="($(cat $SNAP_DATA/args/$app))"
exec "$SNAP/usr/bin/$app" "${args[@]}"
